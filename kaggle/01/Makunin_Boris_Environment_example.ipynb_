{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1XP0dsb-T3ORPYv4YQFV5j23PknFH06O6","timestamp":1733004146720}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"MXXTuy_o0sjk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733004180421,"user_tz":-180,"elapsed":11924,"user":{"displayName":"Борис Макунин","userId":"10895952105344284798"}},"outputId":"965e5bb0-aa44-479f-94b5-51cb280c94ac"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.4/1.4 MB\u001b[0m \u001b[31m14.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m953.8/953.8 kB\u001b[0m \u001b[31m32.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m840.2/840.2 kB\u001b[0m \u001b[31m19.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m178.7/178.7 kB\u001b[0m \u001b[31m10.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h"]}],"source":["!pip install -q -U kaggle_environments"]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import random\n","\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","from kaggle_environments import make, evaluate"],"metadata":{"id":"yz23vWHD0wcj"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["1. Опишем поведение агента, всегда начинающего с \"Камня\"\n","2. Опишем поведение агента, всегда начинающего с \"Камня\", в четный ход играющий предмет, который выигрывает предыдущий ход оппонента, а в нечетный - снова \"Камень\"\n","3. Опишем поведение агента, всегда начинающего с \"Камня\", а потом играющего предмет, который проигрывает предыдущему ходу оппонента\n","4. Опишем поведение агента, всегда начинающего с \"Камня\", а потом играющего предмет, который выигрывает предыдущий ход оппонента\n","5. Опишем поведение агента, всегда начинающего с \"Бумаги\"\n","6. Опишем поведение агента, всегда начинающего с \"Бумаги\", в четный ход играющий предмет, который выигрывает предыдущий ход оппонента, а в нечетный - снова \"Бумагу\"\n","7. Опишем поведение агента, всегда начинающего с \"Бумаги\", а потом играющего предмет, который проигрывает предыдущему ходу оппонента\n","8. Опишем поведение агента, всегда начинающего с \"Бумаги\", а потом играющего предмет, который выигрывает предыдущий ход оппонента\n","9. Опишем поведение агента, всегда начинающего с \"Ножниц\"\n","10. Опишем поведение агента, всегда начинающего с \"Ножниц\", в четный ход играющий предмет, который выигрывает предыдущий ход оппонента, а в нечетный - снова \"Бумагу\"\n","11. Опишем поведение агента, всегда начинающего с \"Ножниц\", а потом играющего предмет, который проигрывает предыдущему ходу оппонента\n","12. Опишем поведение агента, всегда начинающего с \"Ножниц\", а потом играющего предмет, который выигрывает предыдущий ход оппонента"],"metadata":{"id":"TlPSsV3jMyk-"}},{"cell_type":"code","source":["%%writefile rock_agent.py\n","def rock_agent(observation, configuration):\n","  \"\"\"\n","  0 - камень, 1 - бумага, 2 - ножницы\n","  Агент, всегда играющий \"Камень\"\n","  \"\"\"\n","  return 0"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3Kf5N2iuM5ta","executionInfo":{"status":"ok","timestamp":1733016028077,"user_tz":-180,"elapsed":222,"user":{"displayName":"Борис Макунин","userId":"10895952105344284798"}},"outputId":"446ebfd6-aa1e-43e5-9e33-61ff837656ae"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Overwriting rock_agent.py\n"]}]},{"cell_type":"code","source":["%%writefile rock_agent_prev.py\n","def rock_agent_prev(observation, configuration):\n","  \"\"\"\n","  0 - камень, 1 - бумага, 2 - ножницы\n","  Агент, начинающий с \"Камня\", в четный ход играющий предмет,\n","  который выигрывает предыдущий ход оппонента, а в нечетный - снова \"Камень\"\n","  \"\"\"\n","  if observation.step > 0 and observation.step%2 == 0:\n","    if observation.lastOpponentAction == 0:\n","      return 1\n","    elif observation.lastOpponentAction == 1:\n","      return 2\n","    elif observation.lastOpponentAction == 2:\n","      return 0\n","  elif observation.step > 0 and observation.step%2 == 1:\n","    return 0\n","  else:\n","    return 0"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pExx6cs1tD1p","executionInfo":{"status":"ok","timestamp":1733016028871,"user_tz":-180,"elapsed":3,"user":{"displayName":"Борис Макунин","userId":"10895952105344284798"}},"outputId":"900e86c4-1460-4fc8-8831-fc3b0b49af1d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Overwriting rock_agent_prev.py\n"]}]},{"cell_type":"code","source":["%%writefile rock_agent_prev_lose.py\n","def rock_agent_prev_lose(observation, configuration):\n","  \"\"\"\n","  0 - камень, 1 - бумага, 2 - ножницы\n","  Агент, начинающий с \"Камня\", а потом играющий предмет, который проигрывает предыдущему ходу оппонента\n","  \"\"\"\n","  if observation.step > 0:\n","    if observation.lastOpponentAction == 0:\n","      return 2\n","    elif observation.lastOpponentAction == 1:\n","      return 0\n","    elif observation.lastOpponentAction == 2:\n","      return 1\n","  else:\n","    return 0"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7XIcUZX1tEAi","executionInfo":{"status":"ok","timestamp":1733016029676,"user_tz":-180,"elapsed":2,"user":{"displayName":"Борис Макунин","userId":"10895952105344284798"}},"outputId":"39a3f1a7-dcb1-43a4-bea9-b4d06d52f058"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Overwriting rock_agent_prev_lose.py\n"]}]},{"cell_type":"code","source":["%%writefile rock_agent_prev_win.py\n","def rock_agent_prev_win(observation, configuration):\n","  \"\"\"\n","  0 - камень, 1 - бумага, 2 - ножницы\n","  Агент, начинающий с \"Камня\", а потом играющий предмет, который выигрывает предыдущий ход оппонента\n","  \"\"\"\n","  if observation.step > 0:\n","    if observation.lastOpponentAction == 0:\n","      return 1\n","    elif observation.lastOpponentAction == 1:\n","      return 2\n","    elif observation.lastOpponentAction == 2:\n","      return 0\n","  else:\n","    return 0"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QYGHCDTptEII","executionInfo":{"status":"ok","timestamp":1733016030672,"user_tz":-180,"elapsed":201,"user":{"displayName":"Борис Макунин","userId":"10895952105344284798"}},"outputId":"57bef528-365f-4421-f0d0-603f5aa39afe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Overwriting rock_agent_prev_win.py\n"]}]},{"cell_type":"code","source":["%%writefile paper_agent.py\n","def paper_agent(observation, configuration):\n","  \"\"\"\n","  0 - камень, 1 - бумага, 2 - ножницы\n","  Агент, всегда играющий \"Бумагу\"\n","  \"\"\"\n","  return 1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xO1sErpTqQlw","executionInfo":{"status":"ok","timestamp":1733016031280,"user_tz":-180,"elapsed":3,"user":{"displayName":"Борис Макунин","userId":"10895952105344284798"}},"outputId":"1e39823a-f04f-4b4e-a831-d65d149431b3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Overwriting paper_agent.py\n"]}]},{"cell_type":"code","source":["%%writefile paper_agent_prev.py\n","def paper_agent_prev(observation, configuration):\n","  \"\"\"\n","  0 - камень, 1 - бумага, 2 - ножницы\n","  Агент, начинающий с \"Бумаги\", в четный ход играющий предмет,\n","  который выигрывает предыдущий ход оппонента, а в нечетный - снова \"Бумагу\"\n","  \"\"\"\n","  if observation.step > 0 and observation.step%2 == 0:\n","    if observation.lastOpponentAction == 0:\n","      return 1\n","    elif observation.lastOpponentAction == 1:\n","      return 2\n","    elif observation.lastOpponentAction == 2:\n","      return 0\n","  elif observation.step > 0 and observation.step%2 == 1:\n","    return 1\n","  else:\n","    return 1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IxXtULxHtRTH","executionInfo":{"status":"ok","timestamp":1733016032087,"user_tz":-180,"elapsed":2,"user":{"displayName":"Борис Макунин","userId":"10895952105344284798"}},"outputId":"eb2561e9-cc18-4b24-e62e-85b722ac4c52"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Overwriting paper_agent_prev.py\n"]}]},{"cell_type":"code","source":["%%writefile paper_agent_prev_lose.py\n","def paper_agent_prev_lose(observation, configuration):\n","  \"\"\"\n","  0 - камень, 1 - бумага, 2 - ножницы\n","  Агент, начинающий с \"Бумаги\", а потом играющий предмет, который проигрывает предыдущему ходу оппонента\n","  \"\"\"\n","  if observation.step > 0:\n","    if observation.lastOpponentAction == 0:\n","      return 2\n","    elif observation.lastOpponentAction == 1:\n","      return 0\n","    elif observation.lastOpponentAction == 2:\n","      return 1\n","  else:\n","    return 1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rN1nQCTNtRW8","executionInfo":{"status":"ok","timestamp":1733016032728,"user_tz":-180,"elapsed":2,"user":{"displayName":"Борис Макунин","userId":"10895952105344284798"}},"outputId":"401d9fe3-b34c-4a44-a22e-9fb7192c2d36"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Overwriting paper_agent_prev_lose.py\n"]}]},{"cell_type":"code","source":["%%writefile paper_agent_prev_win.py\n","def paper_agent_prev_win(observation, configuration):\n","  \"\"\"\n","  0 - камень, 1 - бумага, 2 - ножницы\n","  Агент, начинающий с \"Бумаги\", а потом играющий предмет, который выигрывает предыдущий ход оппонента\n","  \"\"\"\n","  if observation.step > 0:\n","    if observation.lastOpponentAction == 0:\n","      return 1\n","    elif observation.lastOpponentAction == 1:\n","      return 2\n","    elif observation.lastOpponentAction == 2:\n","      return 0\n","  else:\n","    return 1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u5LDUMNItRdh","executionInfo":{"status":"ok","timestamp":1733016033452,"user_tz":-180,"elapsed":3,"user":{"displayName":"Борис Макунин","userId":"10895952105344284798"}},"outputId":"0d687f3f-271d-4d00-8a01-68204ad72482"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Overwriting paper_agent_prev_win.py\n"]}]},{"cell_type":"code","source":["%%writefile scissor_agent.py\n","def scissor_agent(observation, configuration):\n","  \"\"\"\n","  0 - камень, 1 - бумага, 2 - ножницы\n","  Агент, всегда играющий \"Ножницы\"\n","  \"\"\"\n","  return 2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QWAlG_FfqQoj","executionInfo":{"status":"ok","timestamp":1733016034110,"user_tz":-180,"elapsed":3,"user":{"displayName":"Борис Макунин","userId":"10895952105344284798"}},"outputId":"9567ee14-9fb9-4ffa-d03c-8dd767b1f66c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Overwriting scissor_agent.py\n"]}]},{"cell_type":"code","source":["%%writefile scissor_agent_prev.py\n","def scissor_agent_prev(observation, configuration):\n","  \"\"\"\n","  0 - камень, 1 - бумага, 2 - ножницы\n","  Агент, начинающий с \"Ножниц\", в четный ход играющий предмет,\n","  который выигрывает предыдущий ход оппонента, а в нечетный - снова \"Ножницы\"\n","  \"\"\"\n","  if observation.step > 0 and observation.step%2 == 0:\n","    if observation.lastOpponentAction == 0:\n","      return 1\n","    elif observation.lastOpponentAction == 1:\n","      return 2\n","    elif observation.lastOpponentAction == 2:\n","      return 0\n","  elif observation.step > 0 and observation.step%2 == 1:\n","    return 2\n","  else:\n","    return 2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2kYkr6JftflL","executionInfo":{"status":"ok","timestamp":1733016034960,"user_tz":-180,"elapsed":3,"user":{"displayName":"Борис Макунин","userId":"10895952105344284798"}},"outputId":"988cbab5-32cd-40cb-b6bd-97f3406c1539"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Overwriting scissor_agent_prev.py\n"]}]},{"cell_type":"code","source":["%%writefile scissor_agent_prev_lose.py\n","def scissor_agent_prev_lose(observation, configuration):\n","  \"\"\"\n","  0 - камень, 1 - бумага, 2 - ножницы\n","  Агент, начинающий с \"Ножниц\", а потом играющий предмет, который проигрывает предыдущему ходу оппонента\n","  \"\"\"\n","  if observation.step > 0:\n","    if observation.lastOpponentAction == 0:\n","      return 2\n","    elif observation.lastOpponentAction == 1:\n","      return 0\n","    elif observation.lastOpponentAction == 2:\n","      return 1\n","  else:\n","    return 2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vy8ie3qCtfqa","executionInfo":{"status":"ok","timestamp":1733016035752,"user_tz":-180,"elapsed":4,"user":{"displayName":"Борис Макунин","userId":"10895952105344284798"}},"outputId":"91c89c25-9620-4aa8-d69a-abc8e05524db"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Overwriting scissor_agent_prev_lose.py\n"]}]},{"cell_type":"code","source":["%%writefile scissor_agent_prev_win.py\n","def scissor_agent_prev_win(observation, configuration):\n","  \"\"\"\n","  0 - камень, 1 - бумага, 2 - ножницы\n","  Агент, начинающий с \"Ножниц\", а потом играющий предмет, который выигрывает предыдущий ход оппонента\n","  \"\"\"\n","  if observation.step > 0:\n","    if observation.lastOpponentAction == 0:\n","      return 1\n","    elif observation.lastOpponentAction == 1:\n","      return 2\n","    elif observation.lastOpponentAction == 2:\n","      return 0\n","  else:\n","    return 2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g2MqYCc-tfxl","executionInfo":{"status":"ok","timestamp":1733016036089,"user_tz":-180,"elapsed":2,"user":{"displayName":"Борис Макунин","userId":"10895952105344284798"}},"outputId":"9b8bda5c-3d32-46e3-f972-999a5ca7bfac"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Overwriting scissor_agent_prev_win.py\n"]}]},{"cell_type":"code","source":["# Создаем и перемешиваем список агентов\n","agents = [\n","    \"rock_agent.py\",\n","    \"rock_agent_prev.py\",\n","    \"rock_agent_prev_lose.py\",\n","    \"rock_agent_prev_win.py\",\n","    \"paper_agent.py\",\n","    \"paper_agent_prev.py\",\n","    \"paper_agent_prev_lose.py\",\n","    \"paper_agent_prev_win.py\",\n","    \"scissor_agent.py\",\n","    \"scissor_agent_prev.py\",\n","    \"scissor_agent_prev_lose.py\",\n","    \"scissor_agent_prev_win.py\",\n","]\n","random.shuffle(agents)\n","\n","def tournament(p_list):\n","  \"\"\"\n","  Функция, проводящая турнир \"каждый с каждым\"\n","  \"\"\"\n","  lv_agents = p_list\n","  lv_group = list()\n","  lv_agents_scores = dict()\n","\n","  # В цикле по списку выбираем первого игрока\n","  for left_agent in lv_agents:\n","    lv_left_agent = left_agent\n","    # Инициируем количество очков для игрока, если он еще не играл\n","    lv_agents_scores.setdefault(lv_left_agent, 0)\n","    # В цикле по списку выбираем второго игрока\n","    for right_agent in lv_agents:\n","      lv_group = list()\n","      lv_right_agent = right_agent\n","      # Инициируем количество очков для игрока, если он еще не играл\n","      lv_agents_scores.setdefault(lv_right_agent, 0)\n","      # Если игрок попал сам на себя, то пропускаем итерацию\n","      if lv_left_agent == lv_right_agent:\n","        continue\n","\n","      else:\n","        # Добавляем игроков в группу\n","        lv_group.append(lv_left_agent)\n","        lv_group.append(lv_right_agent)\n","\n","        # Проводим игру\n","        lv_results = evaluate(\n","          \"rps\",\n","          lv_group,\n","          configuration={\"episodeSteps\": 100}\n","          )\n","\n","        lv_result = lv_results[0]\n","        lv_left_score = lv_result[0]\n","        lv_right_score = lv_result[1]\n","\n","        # Сравниваем результаты игры\n","        # Добавляем победившему 1 очко\n","        # При ничьей - переходим к следующей итерации\n","        if lv_left_score > lv_right_score:\n","          lv_agents_scores[lv_left_agent] += 1\n","        elif lv_left_score < lv_right_score:\n","          lv_agents_scores[lv_right_agent] += 1\n","        elif lv_left_score == lv_right_score:\n","          continue\n","\n","  # Возвращаем агента с максимальным количеством очков\n","  max_score = max(lv_agents_scores.values())\n","  max_keys = [k for k, v in lv_agents_scores.items() if v == max_score]\n","\n","  return max_keys\n","\n","\n","print(f'Самая результативная стратегия/и {tournament(agents)}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AHoGNtbcXiYL","executionInfo":{"status":"ok","timestamp":1733022014476,"user_tz":-180,"elapsed":37053,"user":{"displayName":"Борис Макунин","userId":"10895952105344284798"}},"outputId":"e5416aa7-36a9-4e00-e20b-da49e5c79d40"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Самая результативная стратегия/и ['scissor_agent_prev.py', 'paper_agent_prev.py', 'rock_agent_prev.py']\n"]}]},{"cell_type":"markdown","source":["**Вывод:** Из рассмотренных стратегий - самой выигрышной является стратегия розыгрыша в четный ход предмета, который выигрывает предыдущий ход оппонента, а в нечётный ход - предмета с которого началась игра (Причем не имеет значения, какой предмет играет первым и по нечетным ходам - количество побед одинаковое)."],"metadata":{"id":"BItG1VeSI3rR"}}]}